_UpdateSound:
Return if no audio playing (wMusicPlaying is zero)
Loop from 1-8 (0-7):
    If channel active (SOUND_CHANNEL_ON bit set in CHANNEL_FLAGS1):
        If time left in current note < 2, note over:
            Reset vibrato delay (store CHANNEL_VIBRATO_DELAY in CHANNEL_VIBRATO_DELAY_COUNT)
            Turn vibrato off (clear SOUND_PITCH_SLIDE in CHANNEL_FLAGS_2)
            Get next note (call ParseMusic)
        Else:
            Decrement note length (dec CHANNEL_NOTE_DURATION)
        Call ApplyPitchSlide
        Store CHANNEL_DUTY_CYCLE into wCurTrackDuty (and increment HL)
        Store CHANNEL_VOLUME_ENVELOPE into wCurTrackVolumeEnvelope (and hli)
        Store CHANNEL_FREQUENCY into wCurTrackFrequency (and hli)
        Call HandleTrackVibrato
        Call HandleNoise
        If wSFXPriority, then:
            If in music channel (wCurChannel < NUM_MUSIC_CHANS):
                Mute self if channels 5-8 (SFX) are playing anything (set NOTE_REST in CHANNEL_NOTE_FLAGS)
        If in music channel (wCurChannel < NUM_MUSIC_CHANS):
            If equivalent SFX channel (current + 4) is off:
                Call UpdateChannels
                Enable corresponding channel track (wSoundOutput | CHANNEL_TRACKS)
        Else:
            Call UpdateChannels
            Enable corresponding channel track (wSoundOutput | CHANNEL_TRACKS)
        Clear CHANNEL_NOTE_FLAGS
Call PlayDanger
Call FadeMusic
Write volume to hardware (store wVolume in rNR50)
Write sound on/off to hardware (store wSoundOutput in rNR51)

ParseMusic:
    Call GetMusicByte
    If 0xFF (sound_ret_cmd) and not in subroutine (SOUND_SUBROUTINE not set):
        If in music channel (wCurChannel < 4):
            If equivalent SFX channel (current + 4) is off:
                If SOUND_CRY set:
                    Call RestoreVolume
                    If in music channel (wCurChannel < 4):
                        Store 0 in rNR10 (disable sweep?)
        Else:
            If SOUND_CRY set:
                Call RestoreVolume
                If in music channel (wCurChannel < 4):
                    Store 0 in rNR10 (disable sweep?)
        Turn channel off (reset SOUND_CHANNEL_ON)
        Set rest (set NOTE_REST)
        Clear music ID and bank (store 0 in CHANNEL_MUSIC_ID and CHANNEL_MUSIC_BANK)
    Else if >= 0xD0:
        Call ParseMusicCommand
    Else:
        If SOUND_SFX or SOUND_CRY set:
            Goto ParseSFXOrCry
        Else if SOUND_NOISE set:
            Goto GetNoiseSample
        Else:
            Set note duration (call SetNoteDuration with lower nybble of wCurMusicByte)
            If pitch not 0 (upper nybble of wCurMusicByte is > zero):
                Store pitch (store upper nybble of wCurMusicByte in CHANNEL_PITCH)
                Call GetFrequency with pitch and octave (upper nybble of wCurMusicByte, CHANNEL_OCTAVE)
                Store frequency (in CHANNEL_FREQUENCY)
                Set NOTE_NOISE_SAMPLING????
                If SOUND_PITCH_SLIDE set, return
            Else:
                Rest (set NOTE_REST)
